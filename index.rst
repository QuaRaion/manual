**********************
Лабораторный практикум
**********************

:Автор: Аксенов А.В.

.. contents:: Содержание
   :depth: 3

Лабораторная работа № 1. Работа в командной строке
==================================================

Цель работы
-----------
Изучение команд терминалов операционных систем Windows и GNU/Linux, получение навыков работы в командной строке и компиляции простейших программ в консоли.

Теоретические сведения
----------------------

В современных операционных системах важным и мощным инструментом является командная строка.

Важно понимание концепции текущего пути. В командном интерпретаторе это тот каталог, относительно которого выполняются все запускаемые операции с относительными путями файлов и каталогов. Текущий путь обычно отображается в приглашении командной строки.

При указании имен файлов или каталогов могут использоваться как относительные, так и абсолютные пути. Абсолютный путь начинается с имени диска (Windows) или корня файловой системы (GNU/Linux) и содержит полный путь до файла или каталога. Примеры:

.. code-block:: bat

    D:\folder\file.txt         # Windows
    /home/user/folder/file.txt # GNU/Linux

Относительный путь начинается в текущем каталоге и указывает на путь до искомого файла или каталога. При необходимости может применяться ссылка на родительский каталог (``..``). Пример:

.. code-block:: bat

    ..\..\folder2\file1.doc

Ниже приведены справки по командам, использующимся для выполнения заданий для лабораторной работы.

Замечания
"""""""""

В операционной системе Windows командный интерпретатор нечувствителен к регистру. Это значит, что имена команд и их параметров можно набирать в любом регистре (``copy``, ``Copy`` или ``COPY``). В GNU/Linux интерпретатор чувствителен к регистру, поэтому неправильный регистр в имени команды или одного из ее параметров приведет к ошибке.

В обеих операционных системах действуют так называемые символы-джокеры: ``?`` (знак вопроса) и ``*`` (звездочка). Смысл символа ``?`` – замена любого одиночного символа имени файла, символа * – замена любого количества любых символов имени файла.

Операционная система Windows
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Для запуска интерпретатора командной строки необходимо нажать <Win + R>, в появившемся окне набрать cmd, а затем нажать Enter.

Создание текстовых файлов
"""""""""""""""""""""""""

Небольшие текстовые файлы можно набрать непосредственно в командной строке, для этого необходимо ввести команду:

.. code-block:: bat

    copy con имя_файла

После ввода этой команды нужно будет поочередно вводить строки файла. В конце каждой строки надо нажимать <Enter>, а после ввода всего текста -- сочетание клавиш: <Ctrl> + <Z>.

Удаление файлов
"""""""""""""""

Для удаления файлов имеется команда del, ее синтаксис:

.. code-block:: bat

    del имя_файла								

В имени файла можно употреблять символы ``*`` и ``?``, если необходимо удалить несколько файлов. Примеры использования команды:

.. code-block:: language

    del *.bak     # удаление всех файлов с расширением .bak из текущего каталога;
    del paper.doc # удаление файла paper.doc из текущего каталога.

Переименование файлов
"""""""""""""""""""""
Для переименования файлов имеется команда ren. Формат команды:

.. code-block:: bat

    rеn имя_файла_1 имя_файла_2

Параметр ``имя_файла_1`` в команде задает имя переименовываемого файла, ``имя_файла_2`` -- новое имя файла. При этом имени фала может предшествовать путь к этому файлу. Если путь опущен, то подразумевается текущий каталог. В именах файлов можно употреблять символы ``*`` и ``?``.

Перемещение и копирование файлов
""""""""""""""""""""""""""""""""
Для переноса файла с одного места в другое применяется следующая команда:

.. code-block:: bat

    move (/Y) имя_файла каталог

В имени файла можно использовать ``*`` чтобы переместить несколько файлов в другой каталог. При перемещении файла в другой каталог его можно переименовать:

.. code-block:: bat

    move (/Y) имя1 (путь\)имя2

При указании параметра ``/Y`` перезапись файлов выполняется без требования подтверждения.

Копирование файлов
""""""""""""""""""
Для копирования имеется команда ``copy``. Формат команды имеет вид:

.. code-block:: bat

    copy имя_файла_1 (путь\)имя_файла_2
	copy имя_файла путь

Во втором примере из каталога копируются файл или несколько файлов через пробел, заданные параметром ``имя_файла``. Путь в параметре ``путь`` указывает каталог, в который копируются файлы. Если в параметре каталог имя файла отсутствует, то имена файлов при копировании не меняются. Если же в параметре каталог задано имя файла, то оно указывает новое имя копируемого файла.

Соединение (конкатенация) файлов
""""""""""""""""""""""""""""""""

Команда copy может использоваться также для объединения содержимого нескольких файлов в один файл:

.. code-block:: bat

    copy файл1+файл2+...+файлN файл

Имя нового файла должно быть отделено от исходных пробелом. Лучше предварительно создать пустой файл, и затем уже объединять файлы в пустой файл.

Изменение текущего каталога
"""""""""""""""""""""""""""

Для изменения текущего каталога имеется команда cd. Формат команды:

.. code-block:: bat

    cd путь

Для перехода в родительский каталог (на один уровень вверх) служит команда:

.. code-block:: bat

    cd ..

Просмотр каталога
"""""""""""""""""

Для вывода оглавления каталога используется команда dir. Формат команды:

.. code-block:: bat

    dir (путь\)(файл)

В имени файла можно употреблять символы ``*`` и ``?``. Если имя файла не задано, то выводится все оглавление каталога, иначе выводятся только сведения о данном файле или группе файлов. Если в команде не указан путь, то подразумевается текущий каталог.

Создание каталога

Для создания нового каталога имеется команда ``md``. Формат команды:

.. code-block:: bat

    md имя_каталога

Примеры использования команды:

.. code-block:: bat

    md test    # создание подкаталога test в текущем каталоге
    md D:\work # создание подкаталога work в корневом каталоге диска D

Уничтожение каталога

Для удаления пустого каталога имеется команда ``rd``. Формат команды:

.. code-block:: bat

    rd путь

Компиляция и запуск программы

Для компиляции программы на C++ в ОС Windows можно воспользоваться компилятором MSVC, входящим в состав среды Microsoft Visual Studio. Для удобства необходимо работать с ним из утилиты «Командная строка разработчика Visual Studio» (“Developer Command Prompt for Visual Studio”).
Для компиляции программы необходимо выполнить 

.. code-block:: bat

    cl <имя файла с текстом программы>.cpp

Запуск файла из текущего каталога:

.. code-block:: bat

    имя_файла

Операционная система GNU/Linux
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Для запуска интерпретатора командной строки необходимо нажать ``<Ctrl + Alt + T>``.

Создание текстового файла
"""""""""""""""""""""""""

Небольшие текстовые файлы можно набрать непосредственно с клавиатуры. Для этого необходимо ввести команду (на примере
файла test.txt):

.. code-block:: bash
	
    cat > test.txt

    # Курсор переводится на следующую строку, ожидается ввод с клавиатуры

    first line <Enter>  # ввод первой строки, перевод строки
    second line <Enter> # ввод второй строки, перевод строки
    <ctrl + D>          # закрытие файла test.txt

Добавление информации в файл test.txt производится с помощью следующего выражения:

.. code-block:: bash

    cat >> test.txt

Удаление файлов
"""""""""""""""

Для удаления файлов имеется команда 

.. code-block:: bash

    rm имя_файла

В имени файла можно употреблять ``*`` и ``?``, которые заменяют собой любой символ.

Перемещение и переименование файлов
"""""""""""""""""""""""""""""""""""

Для перемещения и переименования файла предназначена утилита ``mv``. Для переименования файла используется синтаксис:

.. code-block:: bash

    mv имя_файла новое_имя_файла

Для перемещения файла в другой каталог используется синтаксис

.. code-block:: bash

    mv имя_файла каталог

Копирование файлов
""""""""""""""""""

Утилита ``cp`` используется для создания копии файла.

.. code-block:: bash

    cp имя_файла_источника имя_файла_назначения

Соединение (конкатенация) файлов
""""""""""""""""""""""""""""""""

Утилита ``cat`` также может использоваться для соединения (конкатенации) двух текстовых файлов. Например, если существуют файлы a.txt и b.txt, команда 

.. code-block:: bash

    cat a.txt b.txt 

выведет на экран соединенное содержимое этих файлов, а команда

.. code-block:: bash

    cat a.txt b.txt >> c.txt 

запишет это содержимое в файл c.txt.

Смена текущего каталога
"""""""""""""""""""""""

Команда cd предназначена для смены текущего каталога. Например, для перехода в подкаталог folder1 текущего катало-
га нужно выполнить команду

.. code-block:: bash

    cd folder1

Домашний каталог текущего пользователя в GNU/Linux обозначается символом ``~``. При выполнении команды ``cd`` без параметров будет осуществлен переход в домашний каталог.

Просмотр текущего каталога
""""""""""""""""""""""""""

Команда ``pwd`` отображает полный путь к текущему каталогу.

Вывод содержимого каталога
""""""""""""""""""""""""""

Утилита ``ls`` предназначена, для вывода списка файлов и подкаталогов в некотором каталоге. Если вызвать ее без параметров, будет выведено содержимое текущего каталога. Рассмотрим некоторые полезные опции для команды ``ls``.

-a  включить в список «скрытые» файлы («скрытые» файлы в Linux имеют в своем названии точку в начале имени файла, например, .local)
-s  отсортировать файлы по размеру
-t  отсортировать файлы по дате изменения
-l  вывести подробную информацию о каждом файле: размер, владельца, права доступа, дату изменения
-R  вывести содержимое подкаталогов

Создание каталога
"""""""""""""""""

Команда mkdir предназначена для создания нового каталога. Для создания нового каталога используется синтаксис:

.. code-block:: bash

    mkdir имя_каталога

Для того, чтобы создать сразу несколько каталогов, необходимо указать их имена через пробел, например:

.. code-block:: bash

    mkdir имя_каталога1 имя_каталога2 имя_каталога3

Уничтожение каталога 
""""""""""""""""""""

Для удаления пустого каталога применяется следующая команда:

rmdir имя_каталога

Компиляция и запуск программы
"""""""""""""""""""""""""""""

Для компиляции программы на C++ в ОС GNU/Linux можно воспользоваться компилятором GNU C++, входящим в состав набора
компиляторов GCC. Можно проверить, установлен ли он в операционной системе, выполнив в терминале команду

.. code-block:: bash

    g++ --version

В случае, если компилятор не установлен, необходимо сделать это:

.. code-block:: bash

    sudo apt install g++

Для компиляции программы необходимо выполнить

.. code-block:: bash

    g++ имя_файла_с_текстом_программы.cpp -o имя_исполняемого_файла

Запуск файла из текущего каталога:

.. code-block:: bash

    ./<имя исполняемого файла>

Порядок выполнения работы
-------------------------

Примечание: названия каталогов, подкаталогов и файлов произвольны.

Лабораторная работа выполняется в два этапа, соответственно двум изучаемым системам: Windows (cmd.exe) и Linux (bash) по
плану, указанному ниже.

После каждой команды, меняющей содержимое каталогов, необходимо выполнять команду вывода содержимого измененного каталога и фиксировать снимок экрана.

* Открыть терминал, перейти в домашний каталог.
* Создать каталог с названием операционной системы. Он будет основным каталогом.
* Перейти в основной каталог.
* В основном каталоге создать три каталога: КАТ1, КАТ2, КАТ3.
* Перейти в каталог КАТ2 и создать в нем каталоги – РКАТ1, РКАТ2.
* Перейти в каталог РКАТ2; создать в нем четыре текстовых файла:
  * stud1.txt – содержащий ваше имя,
  * stud2.txt – содержащий ваше отчество,
  * stud3.txt – содержащий вашу фамилию,
  * stud4.txt – содержащий ваш № группы.
  Для удобства в конце или начале каждого файла необходимо вставить пробел.
* Вернуться в основной каталог и создать в нем два текстовых файла: napr.txt и nomer.txt, содержащих соответственно название направления подготовки и № студенческого билета.
* Создать в каталоге КАТ1 файл student.txt, являющийся объединением файлов stud1.txt, stud2.txt, stud3.txt, stud4.txt, napr.txt и nomer.txt.
* Удалить все использованные файлы.
* Разработать в текстовом редакторе простейшую программу на языке C++, выполняющую вывод в консоль ФИО и группы студента. Сохранить ее в файл program.cpp в основном каталоге.
* Осуществить компиляцию программы из командной строки.
* Запустить программу в консоли и проверить ее работу.

Содержание отчета
-----------------

Примечание: в этом и последующих отчетах текст программы оформлять моноширинным шрифтом.

1. Титульный лист.
2. Цель работы.
3. Задание на лабораторную работу.
4. Снимки экрана всех введенных команд и результатов их выполнения с комментариями.
5. Текст программы.
6. Вывод.